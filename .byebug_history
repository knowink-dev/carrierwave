c
options
c
options
c
options
c
x
options
c
options
file_url
c
options
c
options
file_url
c
file_url
c
file_url
q!
@fog_file.content_type
@uploader.stub(:store_path).and_return('uploads/private.txt')
@file
@uploader
@fog_file = @storage.store!(@file)
@uploader.stub(:store_path).and_return('uploads/private.txt')
@storage.uploader.methods
@storage.uploader
@storage.class
@uploader.files
@fog_file
@storage.store!(@file)
@file
@fog_file.filename
@fog_file
@file
c
@file
c
@file
@storage.store!(@file)
@storage
c
file_url
q!
@fog_file.filename
@fog_file
c
filename
public_url
@uploader.fog_public
@uploader
url(options)
url
file_url
self
options
q!
@fog_file.class.ancestors
@fog_file.class
@fog_file.original_filename
@fog_file.class
@fog_file.methods.grep /file/
@fog_file.methods
@fog_file.attributes
@fog_file.attributes.keys
@fog_file.filename
@fog_file
FOG_CREDENTIALS
q!
@event.url
@event
$arclass
arclass
Hash.from_xml(@event.attributes.to_xml)
@event.attributes.to_xml
@event.attributes
@event
e
c
e
c
e
c
current_path
e
q!
::Magick.methods.grep /ver/
::Magick.methods
::Magick.version
::Magick::Image.read(current_path, &read_block)
read_block.arity
read_block.to_s
read_block.methods
read_block.inspect
read_block
e
frames
q!
read_block
c
read_block
c
read_block
c
read_block
c
read_block
c
::Magick::Image.read(current_path, &read_block)
read_block
c
::Magick::Image.read(current_path, &read_block)
read_block
c
::Magick::Image.read(current_path, &read_block)
read_block
c
::Magick::Image.read(current_path, &read_block)
create_info_block(options[:read])
read_block.inspect
read_block.methods
&read_block
read_block
current_path
::Magick::Image.methods.grep /def/
::Magick::Image.methods.grep /dens/
::Magick::Image.methods.grep /density/
::Magick::Image.methods
q!
c!
q!
@fog_file.filename
@fog_file
c
@fog_file
c
@fog_file
c
@fog_file
c
@fog_file
@file
c
@file
@fog_file
@fog_file.original_filename
@fog_file.originalfilename
@fog_file.filename
@fog_file
@file_file
c
@file
@fog_file.filename
@fog_file
c
it_should_behave_like "#{fog_credentials[:provider]} storage"
c
q!
shared_examples "AWS storage"
shared_examples
it_should_behave_like "AWS storage"
it_should_behave_like "#{fog_credentials[:provider]} storage"
c
fog_credentials[:provider]
c
fog_credentials
c
fog_credentials[:provider]
q!
e
q!
fog_dependency
require "fog/#{fog_dependency}"
fog_dependency
